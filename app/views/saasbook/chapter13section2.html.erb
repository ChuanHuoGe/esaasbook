
<!DOCTYPE html>

<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>13.2. Looking Forwards &#8212; saasbook  documentation</title>
    

    
  
  <link rel="preload" as="font" type="font/woff2" crossorigin
    href="esaasbook/app/assets/stylesheets/_static/vendor/fontawesome/5.13.0/webfonts/fa-solid-900.woff2">
  <link rel="preload" as="font" type="font/woff2" crossorigin
    href="esaasbook/app/assets/stylesheets/_static/vendor/fontawesome/5.13.0/webfonts/fa-brands-400.woff2">

    
      

    
    
  <link rel="preload" as="script" href="esaasbook/app/assets/stylesheets/_static/js/index.1c5a1a01449ed65a7b51.js">

    <script data-url_root="../../" id="documentation_options" src="esaasbook/app/assets/stylesheets/_static/documentation_options.js"></script>
    <script src="esaasbook/app/assets/stylesheets/_static/jquery.js"></script>
    <script src="esaasbook/app/assets/stylesheets/_static/underscore.js"></script>
    <script src="esaasbook/app/assets/stylesheets/_static/doctools.js"></script>
    <script src="esaasbook/app/assets/stylesheets/_static/sphinx-book-theme.12a9622fbb08dcb3a2a40b2c02b83a57.js"></script>
    <link rel="index" title="Index" href="../../genindex.html" />
    <link rel="search" title="Search" href="../../search.html" />
    <link rel="next" title="13.3. Essential Readings" href="3" />
    <link rel="prev" title="13.1. Looking Backwards" href="1" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="docsearch:language" content="en" />
    
  </head>
  <body data-spy="scroll" data-target="#bd-toc-nav" data-offset="80">
    
    <div class="container-fluid" id="banner"></div>

    

    <div class="container-xl">
      <div class="row">
          

</div>


          


          
<main class="col py-md-3 pl-md-4 bd-content overflow-auto" role="main">
    
    <div class="topbar container-xl fixed-top">
    <div class="topbar-contents row">
        <div class="col-12 col-md-3 bd-topbar-whitespace site-navigation show"></div>
        <div class="col pl-md-4 topbar-main">
            
            <button id="navbar-toggler" class="navbar-toggler ml-0" type="button" data-toggle="collapse"
                data-toggle="tooltip" data-placement="bottom" data-target=".site-navigation" aria-controls="navbar-menu"
                aria-expanded="true" aria-label="Toggle navigation" aria-controls="site-navigation"
                title="Toggle navigation" data-toggle="tooltip" data-placement="left">
                <i class="fas fa-bars"></i>
                <i class="fas fa-arrow-left"></i>
                <i class="fas fa-arrow-up"></i>
            </button>
            
            
<div class="dropdown-buttons-trigger">
    <button id="dropdown-buttons-trigger" class="btn btn-secondary topbarbtn" aria-label="Download this page"><i
            class="fas fa-download"></i></button>

    <div class="dropdown-buttons">
        <!-- ipynb file if we had a myst markdown file -->
        
        <!-- Download raw file -->
        <a class="dropdown-buttons" href="../../_sources/part2/chapter13/sub-chapter2.rst.txt"><button type="button"
                class="btn btn-secondary topbarbtn" title="Download source file" data-toggle="tooltip"
                data-placement="left">.rst</button></a>
        <!-- Download PDF via print -->
        <button type="button" id="download-print" class="btn btn-secondary topbarbtn" title="Print to PDF"
            onClick="window.print()" data-toggle="tooltip" data-placement="left">.pdf</button>
    </div>
</div>

            <!-- Source interaction buttons -->

            <!-- Full screen (wrap in <a> to have style consistency -->

<a class="full-screen-button"><button type="button" class="btn btn-secondary topbarbtn" data-toggle="tooltip"
        data-placement="bottom" onclick="toggleFullScreen()" aria-label="Fullscreen mode"
        title="Fullscreen mode"><i
            class="fas fa-expand"></i></button></a>

            <!-- Launch buttons -->

        </div>

        <!-- Table of contents -->
        <div class="d-none d-md-block col-md-2 bd-toc show">
            
        </div>
    </div>
</div>
    <div id="main-content" class="row">
        <div class="col-12 col-md-9 pl-md-3 pr-md-0">
        
              <div>
                
  <div class="section" id="looking-forwards">
<h1><span class="section-number">13.2. </span>Looking Forwards<a class="headerlink" href="#looking-forwards" title="Permalink to this headline">¶</a></h1>
<blockquote>
<div><p><em>I’ve always been more interested in the future than in the past.</em></p>
<p class="attribution">—Grace Murray Hopper</p>
</div></blockquote>
<p>Given this history of rapidly-evolving tools, patterns, and development methodologies,
what might software engineers look forward to in the next few years?</p>
<p>One software engineering technique that we expect to become popular in the next few years
is <em>delta debugging</em> (Zeller 2002). It uses divide-and-conquer to automatically find the
smallest input change to that will cause a bug to appear. Debuggers usually use program
analysis to detect flaws in the code itself. In contrast, delta debugging identifies
changes to the program <em>state</em> that lead to the bug. It requires two runs, one with the
flaw and one without, and it looks at the differences between the sets of states. By
repeatedly changing the inputs and re-running the program using a binary search strategy
and automated testing, delta debugging methodically narrows the differences between the
two runs. Delta debugging discovers dependencies that form a cause-effect chain, which
it expands until it identifies the smallest set of changes to input variables that causes
the bug to appear. Although it requires many runs of the program, this analysis is done at
full program speed and without the intervention of the programmer, so it saves development time.</p>
<p><strong>Program synthesis</strong> may be ready for a breakthrough. The state of the art today is that given
incomplete segments of programs, program synthesis tools can often supply the missing code.
One of the most interesting uses of this technology is in Microsoft Office Excel 2013, called
the <em>Flash Fill feature</em>, which does programming by example (Gulwani et al. 2012). You give
examples of what you want to do to rows or columns of code, and Excel will attempt to repeat
and generalize what you do. Moreover, you can correct its attempts to steer it to what you
want (Gantenbein 2012).</p>
<p>This split between Plan-and-Document and Agile development may become more pronounced with
the advances in practicality of formal methods. The size of programs that can be formally
verified is growing over time, with improvements in tools, faster computers, and wider
understanding of how to write formal specifications. If the work of careful specification
in advance of coding could be rewarded by not needing to test and yet have thoroughly verified
programs, then the tradeoffs would be crisp around change. For formal methods to work, clearly
change needs to be rare. When change is commonplace, Agile is the answer, for change is the
essence of Agile.</p>
<p>While Agile works better than other software methodologies for some types of apps today, it
is surely not the final answer in software development. If a new methodology could simplify
including a good software architecture and good design patterns while maintaining Agile’s ease
of change, it could become more popular. Historically, a new methodology comes along every
decade or two, so it may soon be time for new one.</p>
<p>This book itself was developed during the dawn of the <strong>Massive Open Online Course</strong> (MOOC) movement,
which is another trend that we predict will become more significant in the next few years. Like
many other advances in this modern world, we wouldn’t have MOOCs without SaaS and cloud computing.
The enabling components were:</p>
<ul class="simple">
<li><p>Scalable video distribution via services like YouTube.</p></li>
<li><p>Sophisticated autograders running on cloud computing that evaluate assignments im- mediately yet can scale to tens of thousands of students.</p></li>
<li><p>Discussion forums as a scalable solution to asking questions and getting answers from both other students and the staff.</p></li>
</ul>
<p>These components combine to form a wonderful, low-cost vehicle for students around the world.
For example, it will surely improve continuing education of professionals in our fast changing
field, enable gifted pre-college students to go beyond what their schools can teach, and let
dedicated students around the world who do not have access to great universities still get a
good education. MOOCs may even have the side effect of raising the quality bar for traditional
courses by providing viable alternatives to ineffective lecturers. If MOOCs deliver on only
half of these opportunities, they will still be a potent force in higher education.</p>
</div>


              </div>
              
        
        <div class='prev-next-bottom'>
            
    <a class='left-prev' id="prev-link" href="/chapter/13/section/1" title="previous page"><span class="section-number">13.1. </span>Looking Backwards</a>
    <a class='right-next' id="next-link" href="/chapter/13/section/3" title="next page"><span class="section-number">13.3. </span>Essential Readings</a>

        </div>
        
        </div>
    </div>
    <footer class="footer mt-5 mt-md-0">
    <div class="container">
      <p>
        
          By sme777<br/>
        
            &copy; Copyright 2021, Armando Fox and David Patterson.<br/>
      </p>
    </div>
  </footer>
</main>


      </div>
    </div>
  
  <script src="esaasbook/app/assets/stylesheets/_static/js/index.1c5a1a01449ed65a7b51.js"></script>

  
  </body>
</html>