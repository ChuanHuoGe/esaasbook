    
    <div id="main-content" class="row">
        <div class="col-12 col-md-9 pl-md-3 pr-md-0">
        
              <div>
                
  <div class="section" id="drying-out-mvc-partials-validations-and-filters">
<h1><span class="section-number">5.1. </span>DRYing Out MVC: Partials, Validations and Filters<a class="headerlink" href="#drying-out-mvc-partials-validations-and-filters" title="Permalink to this headline">¶</a></h1>
<p>One of the core tenets of Rails is DRY—Don’t Repeat Yourself. In this section we introduce three mechanisms Rails
provides to help you DRY out your code: model validations, view partials, and controller filters.</p>
<p>We start with views. A <em>partial</em> is Rails’ name for a reusable chunk of a view. When similar content must appear in
different views, putting that content in a partial and “including” it in the separate files helps DRY out repetition.
Our simple app already presents one opportunity: the Index (list all movies) view includes a chunk of HTML that is
repeated for each movie in the list. We can factor out that code into a partial, and include it by reference, as
Figure 5.1 shows.</p>
<div class="highlight-erb notranslate"><div class="highlight"><pre><span></span><span class="x">&lt;!--  ...other code from index.html.erb here... --&gt;</span>
<span class="x">&lt;div class=&quot;row bg-dark text-white&quot;&gt;</span>
<span class="x">    &lt;div class=&quot;col-6 text-center&quot;&gt;Title and More Info&lt;/div&gt;</span>
<span class="x">    &lt;div class=&quot;col-2 text-center&quot;&gt;Rating&lt;/div&gt;</span>
<span class="x">    &lt;div class=&quot;col-4 text-center&quot;&gt;Release Date&lt;/div&gt;</span>
<span class="x">&lt;/div&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">render</span> <span class="ss">partial</span><span class="p">:</span> <span class="s1">&#39;movie&#39;</span><span class="p">,</span> <span class="ss">collection</span><span class="p">:</span> <span class="vi">@movies</span> <span class="cp">%&gt;</span><span class="x"></span>
</pre></div>
</div>
<div class="highlight-erb notranslate"><div class="highlight"><pre><span></span><span class="x">&lt;div class=&quot;row&quot;&gt;</span>
<span class="x">    &lt;div class=&quot;col-8&quot;&gt; </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">movie</span><span class="o">.</span><span class="n">title</span><span class="p">,</span> <span class="n">movie_path</span><span class="p">(</span><span class="n">movie</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"> &lt;/div&gt;</span>
<span class="x">    &lt;div class=&quot;col-2&quot;&gt; </span><span class="cp">&lt;%=</span> <span class="n">movie</span><span class="o">.</span><span class="n">rating</span> <span class="cp">%&gt;</span><span class="x"> &lt;/div&gt;</span>
<span class="x">    &lt;div class=&quot;col-2&quot;&gt; </span><span class="cp">&lt;%=</span> <span class="n">movie</span><span class="o">.</span><span class="n">release_date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%F&#39;</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"> &lt;/div&gt;</span>
<span class="x">&lt;/div&gt;</span>
</pre></div>
</div>

<figure>
    <figcaption>
    Figure 5.1: (Top) Main view that uses a partial for each row of the movies table; (Bottom) Partial containing the code to
    render one row. To leverage convention over configuration, we name it _movie.html.erb: Rails uses the filename (without
    the underscore) to set a local variable (movie) to each item of the @movies collection in turn.
    </figcaption>
</figure>

<p>Partials rely heavily on convention over configuration. Their names must begin with an underscore
(we used <code class="code docutils literal notranslate"><span class="pre">_movie_form.html.erb</span></code>) which is <em>absent from</em> the code that references the partial. A partial may
